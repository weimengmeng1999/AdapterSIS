import os
import sys
import cv2
import json
import numpy as np


def get_one_sample(root_dir, image_file, image_path, save_dir, mask,
                   class_name):
    if '.jpg' in image_file:
        suffix = '.jpg'
    elif '.png' in image_file:
        suffix = '.png'
    mask_path = os.path.join(
        save_dir,
        image_file.replace(suffix, '') + '_{}.png'.format(class_name))
    cv2.imwrite(mask_path, mask)
    data = {
        'img_path': image_path.replace(root_dir, ''),
        'mask_path': mask_path.replace(root_dir, ''),
    }
    return data


def process(root_dir, data_file):
    data_list = []
    data_type = os.getenv('DATA_TYPE', 'train')
    if data_type == 'train':
        img_dir = os.path.join(root_dir, 'autolaparo/imgs/train')

    elif data_type == 'val':
        img_dir = os.path.join(root_dir, 'autolaparo/imgs/val')

    elif data_type == 'test':
        img_dir = os.path.join(root_dir, 'autolaparo/imgs/test')

    for image_file in os.listdir(img_dir):
        image_path = os.path.join(img_dir, image_file)
        print(image_path)
        image = cv2.imread(image_path)
        mask_path = image_path.replace(
            'autolaparo/imgs', 'autolaparo/masks').replace('.jpg', '.png')
        mask = cv2.imread(mask_path)
        mask = mask[:, :, 0]

        for class_id, class_name in enumerate(class2sents.keys()):
            if class_name == 'background':
                target_mask = (mask == 0) * 255
            elif class_name == 'instrument':
                target_mask = np.logical_and((mask != 0), (mask != 180)) * 255
            elif class_name == 'shaft':
                target_mask = np.logical_or(np.logical_or(
                    (mask == 40), (mask == 80)), np.logical_or((mask == 120), (mask == 160))) * 255
            elif class_name == 'manipulator':
                target_mask = np.logical_or(np.logical_or(
                    (mask == 20), (mask == 60)), np.logical_or((mask == 100), (mask == 140))) * 255
            elif class_name == 'grasping_forceps':
                target_mask = np.logical_or((mask == 20), (mask == 40)) * 255
            elif class_name == 'ligasure':
                target_mask = np.logical_or((mask == 60), (mask == 80)) * 255
            elif class_name == 'dissecting_and_grasping_forceps':
                target_mask = np.logical_or((mask == 100), (mask == 120)) * 255
            elif class_name == 'electric_hook':
                target_mask = np.logical_or((mask == 140), (mask == 160)) * 255
            elif class_name == 'uterus':
                target_mask = (mask == 180) * 255



if __name__ == '__main__':
    root_dir = sys.argv[1]
    data_file = sys.argv[2]
    process(root_dir, data_file)